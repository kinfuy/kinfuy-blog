import{_ as n,c as s,o as a,b as t}from"./app.c7c61b90.js";const f='{"title":"LeetCode\u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57","description":"","frontmatter":{"title":"LeetCode\u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57","theme":"default","tag":"Javascript","time":"2021.1.11"},"headers":[{"level":2,"title":"LeetCode \u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57","slug":"leetcode-\u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57"},{"level":3,"title":"\u904D\u5386","slug":"\u904D\u5386"},{"level":3,"title":"\u51CF\u5C11\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u7528 set \u51CF\u5C11\u904D\u5386\u6B21\u6570","slug":"\u51CF\u5C11\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u7528-set-\u51CF\u5C11\u904D\u5386\u6B21\u6570"},{"level":3,"title":"\u5148\u6392\u5E8F\uFF0C\u518D\u4F7F\u7528\u65B9\u6CD5\u4E8C","slug":"\u5148\u6392\u5E8F\uFF0C\u518D\u4F7F\u7528\u65B9\u6CD5\u4E8C"}],"relativePath":"views/article/Javascript/libs/leetcode-num.md"}',p={},o=t(`<h2 id="leetcode-\u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57" tabindex="-1">LeetCode \u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57 <a class="header-anchor" href="#leetcode-\u5237\u9898\u65E5\u8BB0\u4E4B\u627E\u51FA\u6570\u7EC4\u4E2D\u91CD\u590D\u6570\u5B57" aria-hidden="true">#</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d3e0fe55ffd4b7abd6e439dfdfb3e4e~tplv-k3u1fbpfcp-zoom-1.image" alt=""> \u5BF9\u4E8E\u4E00\u6BB5\u7A0B\u5E8F\uFF0C\u7528\u4E0D\u540C\u7684\u65B9\u6CD5\u5199\u6D88\u8017\u65F6\u95F4\u5DEE\u8DDD\u8FD8\u662F\u5F88\u5927\u7684\uFF0C\u4E0B\u9762\u662F\u672C\u9898\u7684\u9010\u6E10\u6539\u8FDB\u8FC7\u7A0B\u3002</p><h3 id="\u904D\u5386" tabindex="-1">\u904D\u5386 <a class="header-anchor" href="#\u904D\u5386" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">findRepeatNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> startIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> nums<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">===</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    startIndex<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/da60c91ac7034fe283656d7d144fade1~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="\u51CF\u5C11\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u7528-set-\u51CF\u5C11\u904D\u5386\u6B21\u6570" tabindex="-1">\u51CF\u5C11\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u7528 set \u51CF\u5C11\u904D\u5386\u6B21\u6570 <a class="header-anchor" href="#\u51CF\u5C11\u65F6\u95F4\u590D\u6742\u5EA6\uFF0C\u7528-set-\u51CF\u5C11\u904D\u5386\u6B21\u6570" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">findRepeatNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  <span class="token keyword">let</span> single <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>single<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      single<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/39185f7aaa334075957126ce3986c95e~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p><h3 id="\u5148\u6392\u5E8F\uFF0C\u518D\u4F7F\u7528\u65B9\u6CD5\u4E8C" tabindex="-1">\u5148\u6392\u5E8F\uFF0C\u518D\u4F7F\u7528\u65B9\u6CD5\u4E8C <a class="header-anchor" href="#\u5148\u6392\u5E8F\uFF0C\u518D\u4F7F\u7528\u65B9\u6CD5\u4E8C" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">let</span> <span class="token function-variable function">findRepeatNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result<span class="token punctuation">;</span>
  nums <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> single <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>single<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      single<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">findRepeatNumber</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/12296120a0dd43fda9f8eabaa15a9ab8~tplv-k3u1fbpfcp-zoom-1.image" alt=""></p>`,11),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var b=n(p,[["render",c]]);export{f as __pageData,b as default};
